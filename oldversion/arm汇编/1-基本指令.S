		AREA start,CODE,READONLY		
		ENTRY
		CODE32
START		
		ADR R9,DAT1
		ADR R10,DAT2
		;===========================================================		
		;@立即数寻址:
		;  立即寻址指令中的操作码字段后面的地址码部分即是操作数本身，
		;也就是说，数据就包含在指令当中，取出指令也就取出了可以立即
		;使用的操作数(这样的数称为立即数)。
		;===========================================================
		MOV R0,#0x1			;立即数0x1存入寄存器R0
		MOV R1,#0x2 		;立即数0x2存入寄存器R1
		ADD R0,R0,#0x4		;寄存器R0中的内容加上立即数0x4 然后存入R0
		  
		;===========================================================                  
		;@寄存器寻址
		;  操作数的值在寄存器中，指令中的地址码字段指出的是寄存器编
		;号，指令执行时直接取出寄存器值来操作。
		;===========================================================	
		MOV R2,R1			;将R1的值存入R2 
		SUB R1,R2,R0  		;将R2减去R0的值存到R1中
		ADD R2,R2,R0,LSL #1	;又叫寄存器移位寻址，将R0左移1位与R2相加
							;的值存入R2
		
		;===========================================================
		;@寄存器间接寻址
		;  寄存器间接寻址指令中的地址码给出的是一个通用寄存器的编号，
		;所需的操作数保存在寄存器指定地址的存储单元中，即寄存器为操
		;作数的地址指针。
		;===========================================================
		LDR R1,[R9]			;将R9指向的存储单元的数据读出保存在R1中 
		STR R2,[R9]			;将R2的内容存入以R9的值为地址的存储器中
		SWP R1,R1,[R9] 		;将寄存器R1的值和R9指定的存储单元的内容 
							;交换
		;===========================================================
		;@基址变址寻址
		;  基址寻址就是将基址寄存器的内容与指令中给出的偏移量相加，
		;形成操作数的有效地址。基址寻址用于访问基址附近的存储单元，
		;常用于查表、数组操作、功能部件寄存器访问等。
		;  变址寻址就是将基址寄存器的内容加上变址寄存器的内容构成
		;操作数的有效地址。
		;===========================================================
		LDR R0,[R9,#4]		;读取R9+4地址上的存储单元的内容，放入R0
		STR R0,[R10,#4]		;将R0的值存入R10+4地址的存储单元中
		
		;===========================================================
		;@多寄存器寻址
		;多寄存器寻址一次可传送几个寄存器值，允许一条指令传送16个寄
		;存器的任何子集或所有寄存器。
		;===========================================================
		LDMIA R9!,{R1-R5,R8};将R9指向单元中数据读出到R1-R5,R8中(R9自
							;动加1)
		STMIA R10!,{R1-R5,R8};R1-R5,R8的值保存到R10指向的存储单元(
							;R10自动加1)
		 
		;===========================================================
		;@相对寻址
		;  相对寻址是基址寻址的一种变通。由程序计数器PC提供基准地址，
		;指令中的地址码字段作为偏移量，两者相加后得到的地址即为操作
		;数的有效地址。
		;===========================================================
		B HALT 				;机器码：0xea000001 ;最末的1就表示
							;偏移地址，实际偏移(2+2)*4字节
		NOP
		NOP
		NOP
HALT
		B	HALT	
		
		
DLEGTH	EQU 6
DAT1 	
		DCD	0x1000 
		DCD	0x2000
		DCD	0x3000
		DCD	0x4000
		DCD	0x5000
		DCD	0x6000
		NOP
		NOP
DAT2	SPACE DLEGTH*4		;分配DLEGTH*4的空间，并标为DAT2
		
		END	
